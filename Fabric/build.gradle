plugins {
	id 'fabric-loom' version '1.3.9'
    id 'io.freefair.lombok' version '6.6.+'
	
    id 'idea'
	id 'maven-publish'
}

base {
    archivesName = "$mod_name-$mc_version-fabric"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Using Fabric: $fabric_version, Loader: $loader_version, for Minecraft: $mc_version, with Mappings: $mappings_channel-$mappings_version\n"

loom {
    runs {
		client {
			client()

			setConfigName("Fabric Client")
			ideConfigGenerated(true)
			runDir("run")
		}

		server {
			server()

			setConfigName("Fabric Server")
			ideConfigGenerated(true)
			runDir("run")
		}
	}

	accessWidenerPath.set(file("src/main/resources/${mod_id}.accesswidener"))
}

repositories {
	maven { url 'https://maven.parchmentmc.org' }
}

dependencies {
	minecraft "com.mojang:minecraft:$mc_version"

	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-$mc_version:$mappings_version@zip")
	}

	modImplementation "net.fabricmc:fabric-loader:$loader_version"
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version+$mc_version"

    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	withJavadocJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
			artifact sourcesJar
			artifact javadocJar

			artifactId "$archivesBaseName"
		}
	}
	repositories {
//		maven {
//			url "https://hantonikdev.jfrog.io/artifactory/mods/"
//
//			credentials {
//				username System.getenv("REPO_USER")
//				password System.getenv("REPO_PASSWORD")
//			}
//		}

		mavenLocal()
	}
}
