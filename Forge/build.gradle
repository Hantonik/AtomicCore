plugins {
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'io.freefair.lombok' version '6.6.+'

    id 'idea'
    id 'maven-publish'
}

base {
    archivesName = "$mod_name-$mc_version-forge"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Using Forge (NeoForged): $forge_version, for Minecraft: $mc_version, with Mappings: $mappings_channel-$mappings_version"

minecraft {
    mappings channel: mappings_channel, version: "$mappings_version-$mc_version"

    copyIdeResources = true

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', "$mod_id"

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                atomiccore {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', "$mod_id"

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                atomiccore {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.neoforged:forge:$mc_version-$forge_version"

    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
}

jar.finalizedBy('reobfJar')

java {
    withSourcesJar()
    withJavadocJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar

            artifactId "$archivesBaseName"
        }
    }
    repositories {
//        maven {
//            url "https://hantonikdev.jfrog.io/artifactory/mods/"
//
//            credentials {
//                username System.getenv("REPO_USER")
//                password System.getenv("REPO_PASSWORD")
//            }
//        }

        mavenLocal()
    }
}
